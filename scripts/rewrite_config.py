#!/usr/bin/env python3
"""Rewrite PICO-8 config template with workspace-specific paths."""

from __future__ import annotations

import pathlib
import sys


NOTE_START = "// Note!"
NOTE_END = "// End Note!"
REPLACEMENT_LINE = "// Generated by PICO-8 Workspace initializaton."


def rewrite_config(
    source_path: pathlib.Path,
    destination_path: pathlib.Path,
    desktop_path: str,
    root_path: str,
    cdata_path: str,
) -> None:
    """Write updated config to ``destination_path`` based on ``source_path``."""
    lines = source_path.read_text().splitlines()
    updated: list[str] = []
    skipping_note = False

    for line in lines:
        stripped = line.strip()

        if stripped.startswith(NOTE_START):
            skipping_note = True
            updated.append(REPLACEMENT_LINE)
            continue

        if skipping_note:
            if stripped.startswith(NOTE_END):
                skipping_note = False
            continue

        if line.startswith("desktop_path "):
            line = f"desktop_path {desktop_path}"
        elif line.startswith("root_path "):
            line = f"root_path {root_path}"
        elif line.startswith("cdata_path "):
            line = f"cdata_path {cdata_path}"

        updated.append(line)

    destination_path.write_text("\n".join(updated) + "\n")


def main(argv: list[str]) -> int:
    if len(argv) != 6:
        print(
            "Usage: rewrite_config.py <source> <dest> <desktop> <root> <cdata>",
            file=sys.stderr,
        )
        return 1

    source = pathlib.Path(argv[1])
    destination = pathlib.Path(argv[2])

    rewrite_config(source, destination, argv[3], argv[4], argv[5])
    return 0


if __name__ == "__main__":
    raise SystemExit(main(sys.argv))
